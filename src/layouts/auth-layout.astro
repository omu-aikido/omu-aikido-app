---
import Baselayout from "./baselayout.astro";
import Footer from "../components/root/footer.astro";
import AccountUi from "../components/ui/account-ui.astro";
import Modal from "../components/ui/modal.astro";

import "@/src/styles/global.css";
import { APP_NAME } from "@/src/const";
import { getRole } from "@/src/lib/query/profile";
import type { Role } from "@/src/class";
import { APPS } from "@/src/const";

/** Main menu items */
let textLinks: { label: string; href: string }[] = [
    { label: "Dashboard", href: "/dashboard" },
    { label: "Apps", href: "/apps" },
    { label: "Account", href: "/account" },
];

const user = await Astro.locals.currentUser();
if (!user) {
    return Astro.redirect("/sign-in");
}
const role = (await getRole({ userId: user.id })) as Role;

if (role.isManagement() && !textLinks.some((link) => link.label === "Admin")) {
    textLinks.push({ label: "Admin", href: "/admin" });
}

interface Props {
    title: string;
}

const homelink = "/dashboard";
const { title } = Astro.props;

if (role.isManagement() && !APPS.some((app) => app.name === "管理者メニュー")) {
    APPS.push({
        name: "管理者メニュー",
        path: "/admin",
        desc: "管理者メニューに移動します。",
    });
}
---

<Baselayout pagename=`${APP_NAME} - ${title}`>
    <header>
        <nav class="mobile-menu">
            {
                textLinks.length > 0 && (
                    <Modal position="left" icon="  ☰  ">
                        {textLinks.map((link) => (
                            <a
                                href={link.href}
                                aria-current={
                                    link.href === "/"
                                        ? Astro.url.pathname === "/"
                                            ? "page"
                                            : undefined
                                        : Astro.url.pathname.startsWith(
                                                link.href
                                            )
                                          ? "page"
                                          : undefined
                                }
                                class="modal-inner-content"
                            >
                                {link.label}
                            </a>
                        ))}
                    </Modal>
                )
            }
        </nav>
        <h2>
            <a href={homelink}>{title}</a>
        </h2>
        {
            textLinks.length > 0 && (
                <nav class="links">
                    {textLinks.map((link) => (
                        <a
                            href={link.href}
                            aria-current={
                                link.href === "/"
                                    ? Astro.url.pathname === "/"
                                        ? "page"
                                        : undefined
                                    : Astro.url.pathname.startsWith(link.href)
                                      ? "page"
                                      : undefined
                            }
                        >
                            {link.label}
                        </a>
                    ))}
                </nav>
            )
        }
        <AccountUi apps={APPS} />
    </header>
    <div class="container">
        <main>
            <slot />
        </main>
    </div>
    <Footer />
</Baselayout>

<style>
    header {
        margin: 0;
        padding: 0 5%;
        background-color: rgb(var(--base) / 0.85);
        box-shadow: 0px 2px 15px -5px rgb(var(--mauve) / 0.5);
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 5rem;
        position: sticky;
        top: 0;
        z-index: 100;
        color: rgb(var(--text));
    }

    header > h2 {
        margin: 0;
    }
    header > h2 > a {
        text-decoration: none;
        color: rgb(var(--text));
        margin: 0;
        padding: 0;
        font-size: 1.5rem;
        transition: color 0.2s ease;
    }

    header > h2 > a:hover {
        color: rgb(var(--mauve));
    }

    .links {
        border-radius: 12px;
        border: 1px solid rgb(var(--surface2) / 0.3);
        padding: 4px;
        background-color: rgb(var(--surface0) / 0.3);
        backdrop-filter: blur(10px);
        transition: all 0.2s ease;
    }

    .links:hover {
        border-color: rgb(var(--mauve) / 0.5);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px -2px rgb(var(--mauve) / 0.15);
    }

    nav {
        display: flex;
        gap: 0.5rem;
    }

    nav > a {
        color: rgb(var(--text));
        text-decoration: none;
        margin: 0;
        padding: 0.3rem 1rem;
        border-radius: 8px;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        transition: all 0.2s ease;
    }

    nav > a:hover:not([aria-current="page"]) {
        background-color: rgb(var(--surface1) / 0.5);
        transform: translateY(-1px);
    }

    .links > a[aria-current="page"] {
        background-color: rgb(var(--mauve));
        color: rgb(var(--base));
    }

    .mobile-menu {
        display: none;
    }

    .modal-inner-content {
        display: flex;
        color: rgb(var(--subtext0));
        backdrop-filter: blur(1px);
        flex-direction: column;
        margin: 8px 0;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 1px 1px 4px 2px rgb(var(--shadow) / 0.8);
        transition:
            transform 0.2s ease,
            box-shadow 0.2s ease;
        align-items: st retch;
    }
    .modal-inner-content:hover {
        transform: translateY(-2px);
        box-shadow: 0px 0px 4px 3px rgb(var(--mauve) / 0.4);
    }
    /* 現在のページならハイライト */
    /* ボーダーをグラデーションにして光彩が周囲を回っているような雰囲気にする */
    .modal-inner-content[aria-current="page"] {
        box-shadow: 0px 0px 3px 2px rgb(var(--sapphire) / 0.4);
    }

    .modal-inner-content a {
        color: rgb(var(--text));
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        transition:
            background-color 0.2s ease,
            color 0.2s ease;
    }

    .modal-inner-content a:hover {
        background-color: rgb(var(--mauve) / 0.2);
        color: rgb(var(--mauve));
    }
    @media (max-width: 815px) {
        header {
            height: 4rem;
        }
        .mobile-menu {
            display: flex;
        }
        .links {
            display: none;
        }
        header > h2 {
            margin: 0;
        }
        header > h2 > a {
            font-size: 1.2rem;
            padding: 0;
        }
        nav > a {
            font-size: 1rem;
            padding: 0.2rem 0.8rem;
        }
    }
</style>
