---
import { grade } from "@/src/utils";
import NonAuthLayout, {
    default as Layout,
} from "@/src/layouts/non-auth-layout.astro";
import { actions } from "astro:actions";
import { tv } from "tailwind-variants";
import Notification from "@/src/components/ui/notification.astro";
import { getRole } from "@/src/lib/query/profile";
const user = await Astro.locals.currentUser();
const profile = Astro.locals.profile;

if (!user || !profile) {
    return Astro.redirect("/sign-in");
}
const input = tv({
    base: "w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
});

const result = Astro.getActionResult(actions.user.profile.update);
if (result && !result.error) {
    Astro.redirect("/dashboard");
}
const role = getRole({ profile });
---

<Layout title="リカバリ">
    {
        result && result.error && (
            <Notification
                title="プロフィール登録"
                message={`プロフィールの登録に失敗しました。 ${result.error.message}`}
                type="error"
                duration={10000}
            />
        )
    }
    <div
        class="min-h-screen bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8"
    >
        <div class="max-w-md mx-auto">
            <h1
                class="text-3xl font-bold text-center text-gray-900 dark:text-white mb-8"
            >
                アカウントリカバリ
            </h1>

            <form
                class="space-y-6 bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md"
                method="POST"
                action={actions.user.profile.update}
            >
                <div>
                    <input
                        type="hidden"
                        name="id"
                        value={user.id}
                        class="hidden"
                    />
                    <label
                        for="grade"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
                    >
                        所持級段位
                        <span class="text-red-600 dark:text-red-400 ml-1"
                            >*</span
                        >
                    </label>
                    <select id="grade" name="grade" required class={input()}>
                        {
                            grade.map((g) => (
                                <option value={g.grade}>{g.name}</option>
                            ))
                        }
                    </select>
                </div>

                <div>
                    <label
                        for="getGradeAt"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
                    >
                        級段位取得日
                    </label>
                    <input
                        type="date"
                        id="getGradeAt"
                        name="getGradeAt"
                        class={input()}
                    />
                </div>

                <div>
                    <label
                        for="joinedAt"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
                    >
                        入部年度
                        <span class="text-red-600 dark:text-red-400 ml-1"
                            >*</span
                        >
                    </label>
                    <input
                        type="number"
                        id="joinedAt"
                        name="joinedAt"
                        placeholder="4桁の数字"
                        required
                        value={new Date().getFullYear()}
                        class={input()}
                    />
                </div>

                <div>
                    <label
                        for="year"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
                    >
                        学年
                        <span class="text-red-600 dark:text-red-400 ml-1"
                            >*</span
                        >
                    </label>
                    <select id="year" name="year" required class={input()}>
                        <option value="b1">学部 1年</option>
                        <option value="b2">学部 2年</option>
                        <option value="b3">学部 3年</option>
                        <option value="b4">学部 4年</option>
                        <option value="m1">修士 1年</option>
                        <option value="m2">修士 2年</option>
                        <option value="d1">博士 1年</option>
                        <option value="d2">博士 2年</option>
                    </select>
                </div>

                <input type="hidden" name="role" value={role?.toString()} />
                <input type="hidden" name="id" value={user.id} />

                <button
                    type="submit"
                    class="cursor-pointer w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-800 transition duration-200"
                    id="profile-form"
                >
                    再登録
                </button>
            </form>
        </div>
    </div>
</Layout>

<script>
    const form = document.querySelector("form")!;
    const button = document.getElementById("profile-form") as HTMLButtonElement;
    form.addEventListener("submit", (event) => {
        event.preventDefault();
        button.textContent = "送信中...";
        button.classList.add(
            "text-slate-800",
            "dark:text-slate-100",
            "bg-slate-300",
            "dark:bg-slate-600",
            "cursor-pointer"
        );
        button.disabled = true;
        form.submit();
    });
</script>
