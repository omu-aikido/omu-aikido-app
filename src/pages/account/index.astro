---
import { default as Layout } from "@/src/layouts/auth-layout.astro";
import { UserProfile } from "@clerk/astro/components";
import Notification from "@/src/components/ui/notification.astro";
const user = await Astro.locals.currentUser();

if (!user) {
    return Astro.redirect("/sign-in");
}

import * as profile from "@/src/lib/query/profile";
import { grade, year } from "@/src/utils";
import { Role } from "@/src/class";
import { actions } from "astro:actions";

const userProfile = await profile.getProfile({ userId: user.id });

if (userProfile instanceof Response) {
    return userProfile;
}

const role = await profile.getRole({ userId: user.id });
const result = Astro.getActionResult(actions.user.profile.update);
---

<Layout title="アカウント">
    {
        result && result.error && (
            <Notification
                title="プロフィール更新"
                message={`プロフィールの更新に失敗しました。 ${result.error.message}`}
                type="error"
                duration={10000}
            />
        )
    }
    {
        result && !result.error && (
            <Notification
                title="プロフィール更新"
                message="プロフィールが正常に更新されました。"
                type="success"
                duration={3000}
            />
        )
    }
    <UserProfile appearance={{}}>
        <UserProfile.Page label="ステータス" url="status">
            <svg
                slot="label-icon"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 512 512"
                fill="currentColor"
            >
                <path
                    d="M 225.132 50 L 274.865 50 L 290.927 101.539 C 303.186 104.918 314.978 109.803 326.037 116.081 L 373.838 90.994 L 409.006 126.161 L 383.918 173.962 C 390.195 185.021 395.081 196.813 398.46 209.072 L 449.999 225.133 L 449.999 274.866 L 398.46 290.928 C 395.081 303.187 390.195 314.979 383.918 326.038 L 409.006 373.839 L 373.838 409.007 L 326.037 383.919 C 314.978 390.196 303.186 395.082 290.927 398.461 L 274.865 450 L 225.132 450 L 209.071 398.461 C 196.812 395.082 185.02 390.196 173.961 383.919 L 126.16 409.007 L 90.993 373.839 L 116.08 326.038 C 109.802 314.979 104.916 303.187 101.538 290.928 L 49.999 274.866 L 49.999 225.133 L 101.538 209.072 C 104.916 196.813 109.802 185.021 116.08 173.962 L 90.993 126.161 L 126.16 90.994 L 173.961 116.081 C 185.02 109.803 196.812 104.918 209.071 101.539 L 225.132 50 Z M 249.999 184 C 199.192 184 167.439 239.003 192.841 283.003 C 204.632 303.421 226.419 316 249.999 316 C 300.806 316 332.559 261.003 307.157 217.003 C 295.366 196.578 273.578 184 249.999 184"
                ></path>
            </svg>

            <h1
                class="text-2xl font-bold text-gray-800 dark:text-gray-100 mb-6"
            >
                ステータス
            </h1>
            <form
                id="setup-form"
                class="max-w-md mx-auto space-y-6 bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md dark:shadow-lg"
                method="POST"
                action={actions.user.profile.update}
            >
                <div class="space-y-2">
                    <label
                        for="grade"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300"
                    >
                        所持級段位
                        <span class="text-red-600 dark:text-red-400 ml-1"
                            >*</span
                        >
                    </label>
                    <select
                        id="grade"
                        name="grade"
                        required
                        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    >
                        {
                            grade.map((g) => (
                                <option
                                    value={g.grade}
                                    selected={g.grade === userProfile.grade}
                                >
                                    {g.name}
                                </option>
                            ))
                        }
                    </select>
                </div>

                <div class="space-y-2">
                    <label
                        for="getGradeAt"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300"
                        >級段位取得日</label
                    >
                    <input
                        type="date"
                        id="getGradeAt"
                        name="getGradeAt"
                        value=`${(new Date(userProfile.getGradeAt)).toISOString().split('T')[0]}`
                        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    />
                </div>

                <div class="space-y-2">
                    <label
                        for="joinedAt"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300"
                    >
                        入部年度
                        <span class="text-red-600 dark:text-red-400 ml-1"
                            >*</span
                        >
                    </label>
                    <input
                        type="number"
                        id="joinedAt"
                        name="joinedAt"
                        placeholder="4桁の数字"
                        required
                        value={userProfile.joinedAt}
                        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    />
                </div>

                <div class="space-y-2">
                    <label
                        for="year"
                        class="block text-sm font-medium text-gray-700 dark:text-gray-300"
                    >
                        学年
                        <span class="text-red-600 dark:text-red-400 ml-1"
                            >*</span
                        >
                    </label>
                    <select
                        id="year"
                        name="year"
                        value={userProfile.year}
                        required
                        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    >
                        {
                            year.map((y) => (
                                <option
                                    value={y.year}
                                    selected={y.year === userProfile.year}
                                >
                                    {y.name}
                                </option>
                            ))
                        }
                    </select>
                </div>

                <input type="hidden" name="role" value={role?.ja} />

                <button
                    type="submit"
                    id="profile-form"
                    class="w-full bg-blue-600 hover:bg-blue-700 dark:bg-blue-700 dark:hover:bg-blue-800 text-white py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 font-medium transition-colors duration-200"
                >
                    登録
                </button>
            </form>
        </UserProfile.Page>
    </UserProfile>
</Layout>

<script>
    const form = document.querySelector("form")!;
    const button = document.getElementById("profile-form") as HTMLButtonElement;
    form.addEventListener("submit", (event) => {
        event.preventDefault();
        button.textContent = "送信中...";
        button.classList.remove(
            "bg-blue-600",
            "hover:bg-blue-700",
            "dark:bg-blue-500",
            "dark:hover:bg-blue-600"
        );
        button.classList.add(
            "text-slate-800",
            "dark:text-slate-100",
            "bg-slate-300",
            "dark:bg-slate-600",
            "cursor-pointer"
        );
        button.disabled = true;
        form.submit();
    });
</script>
