---
import { default as Layout } from "@/src/layouts/auth-layout.astro";
import { getProfile } from "@/src/lib/query/profile";
import {
    userActivity,
    createActivity,
    inputActivity,
} from "@/src/lib/query/activity";
import { translateGrade, timeForNextGrade } from "@/src/utils";
import { getAllActivities } from "@/src/lib/query/activity";

const user = await Astro.locals.currentUser();

if (!user) {
    return Astro.redirect("/sign-in");
}
const userProfile = await getProfile({ userId: user.id });
if (userProfile instanceof Response) {
    return Astro.redirect("/account/recovery");
}

if (Astro.request.method == "POST") {
    let data = await Astro.request.formData();
    let date = data.get("date") as unknown as Date;
    let dataParsed = new Date(date).toISOString().split("T")[0];
    let period = data.get("period") as unknown as number;

    const actData: typeof inputActivity = {
        date: dataParsed,
        id: user.id, // バックエンドで生成するのでなんでもいい
        userId: user.id,
        period: period,
    };
    const result = await createActivity({
        userId: user.id,
        activity: actData,
    });

    if (result instanceof Error) {
        return new Response(result.message, { status: 500 });
    } else {
        return Astro.redirect("/apps/record");
    }
}

import Grid from "@/src/components/ui/grid.astro";
import AppIcon from "@/src/components/ui/app-icon.astro";
import { APPS } from "@/src/const";
---

<Layout title="ダッシュボード">
    <h2>追加</h2>

    <form id="activity-form" class="activity-form" method="POST">
        <label for="date">
            日付
            <span style="color:rgb(var(--maroon))">*</span>
        </label>
        <input
            type="date"
            id="date"
            name="date"
            value=`${(new Date()).toISOString().split('T')[0]}`
            required
        />

        <label for="period">
            稽古時間
            <span style="color:rgb(var(--maroon))">*</span>
        </label>
        <input type="number" id="period" name="period" value="1.5" required />
        <br />
        <button type="submit">追加</button>
    </form>
    <hr />
    <Grid variant="offset">
        {
            APPS.map((app) => (
                <AppIcon title={app.name} id={app.path} desc={app.desc} />
            ))
        }
    </Grid>
</Layout>

<style>
    .activity-form {
        display: grid;
        grid-template-columns: 100px 1fr;
        gap: 1rem;
        align-items: center;
    }
    .activity-form button {
        grid-column: span 2;
    }
</style>
