---
import { default as Layout } from "@/src/layouts/layout.astro"
import { Role } from "@/src/class"
import Grid from "@/rr7/components/ui/Grid"
import { AppIcon } from "@/rr7/components/ui/AppIcon"
import { APPS } from "@/src/const"
import ActivityForm from "@/src/components/add-record.astro"
import ActivityFormPh from "@/src/components/add-record-ph.astro"
import { style } from "@/src/styles/component"
import RecentsPh from "@/src/components/recents-ph.astro"
import Recents from "@/src/components/recents.astro"

const profile = Astro.locals.profile
if (!profile) {
  return Astro.redirect("/sign-in")
}
const role = Role.fromString(profile.role)

if (role && role.isManagement() && !APPS.some((app) => app.name === "管理者メニュー")) {
  APPS.push({
    name: "管理者メニュー",
    path: "/admin",
    desc: "管理者メニューに移動します。",
  })
}
---

<Layout title="ダッシュボード">
  <h2 class={style.text.title()}>追加</h2>

  <ActivityForm server:defer>
    <ActivityFormPh slot="fallback" />
  </ActivityForm>
  <Recents server:defer>
    <RecentsPh slot="fallback" />
  </Recents>

  <hr />
  <Grid variant="offset">
    {APPS.map((app) => <AppIcon title={app.name} id={app.path} desc={app.desc} />)}
  </Grid>
</Layout>
