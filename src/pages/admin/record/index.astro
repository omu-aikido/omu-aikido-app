---
import { default as Layout } from "@/src/layouts/auth-layout.astro";
import type { Account } from "@/src/type";
import { countUsers, listUser } from "@/src/lib/query/admin/clerk";
import { getRole } from "@/src/lib/query/profile";
import { Role } from "@/src/class";
import * as record from "@/src/lib/query/admin/activity";
import { translateGrade, timeForNextGrade } from "@/src/utils";
import { style } from "@/src/styles/component";
const user = await Astro.locals.currentUser();
if (!user) {
    return Astro.redirect("/sign-in");
}
const role = await getRole({ userId: user.id });
if (!role || !role.isManagement()) {
    return Astro.redirect("/dashboard");
}

const paging = Astro.url.searchParams.get("page") ?? "0";

const alluser = await countUsers();
const users = await listUser(parseInt(paging) * 10);

const pageingStatus = {
    current: parseInt(paging),
    total: Math.ceil(alluser / 10),
};

const users_info = users
    .sort((a: Account, b: Account) => {
        return Role.compare(a.public_metadata.rol1e, b.public_metadata.role);
    })
    .map(async (mapuser: Account) => {
        return {
            id: mapuser.id,
            name: `${mapuser.last_name} ${mapuser.first_name}`,
            grade: translateGrade(
                mapuser.public_metadata.grade as unknown as number
            ),
            timeForNextGrade: timeForNextGrade(
                mapuser.public_metadata.grade as unknown as number
            ),
            trainFromPreGrade: parseInt(
                `${
                    (
                        await record.getTrainings({
                            userId: mapuser.id,
                        })
                    )
                        .map((record) => record.period)
                        .reduce((a, b) => a + b, 0) / 1.5
                }`
            ),
        };
    });
---

<Layout title="管理者メニュー">
    <div class={style.table.container()}>
        <table class={style.table.table()}>
            <thead class={style.table.thead.container()}>
                <tr class={style.table.thead.tr()}>
                    <th class={style.table.thead.th()}>氏名</th>
                    <th class={style.table.thead.th()}>級段位</th>
                    <th class={style.table.thead.th()}>受験資格</th>
                    <th class={style.table.thead.th()}></th>
                </tr>
            </thead>
            <tbody class={style.table.tbody.container()}>
                {
                    users_info.map(async (user) => (
                        <tr class={style.table.tbody.tr()}>
                            <td class={style.table.tbody.td()}>
                                {(await user).name}
                            </td>
                            <td class={style.table.tbody.td()}>
                                {(await user).grade}
                            </td>
                            <td class={style.table.tbody.td()}>
                                {(await user).trainFromPreGrade}/
                                {(await user).timeForNextGrade}
                            </td>
                            <td class={style.table.tbody.td()}>
                                <a
                                    class="inline-block px-3 py-1 text-sm font-medium text-white bg-blue-600 rounded hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 transition-colors"
                                    href={`/admin/record/${(await user).id}`}
                                >
                                    詳細
                                </a>
                            </td>
                        </tr>
                    ))
                }
            </tbody>
        </table>
    </div>
    {
        pageingStatus.total > 1 && (
            <div class="flex gap-2 justify-center mt-4">
                <nav class="inline-flex -space-x-px">
                    {/* 前へ */}
                    {pageingStatus.current > 0 && (
                        <a
                            href={`/admin/record?page=${pageingStatus.current - 1}`}
                            class="m-2 px-3 py-2 text-sm font-medium text-slate-500 bg-white border border-slate-300 rounded-lg hover:bg-slate-100 dark:bg-slate-800 dark:text-slate-400 dark:border-slate-700 dark:hover:bg-slate-700"
                        >
                            前へ
                        </a>
                    )}

                    {/* ページ番号 */}
                    <div class="m-2 px-3 py-2 text-sm font-medium rounded-lg text-slate-500 bg-slate-200 border border-slate-300 dark:bg-slate-600 dark:border-slate-700">
                        {pageingStatus.current + 1 + "/" + pageingStatus.total}
                    </div>

                    {/* 次へ */}
                    {pageingStatus.current < pageingStatus.total - 1 && (
                        <a
                            href={`/admin/record?page=${pageingStatus.current + 1}`}
                            class="m-2 px-3 py-2 text-sm font-medium text-slate-500 bg-white border border-slate-300 rounded-lg hover:bg-slate-100 dark:bg-slate-800 dark:text-slate-400 dark:border-slate-700 dark:hover:bg-slate-700"
                        >
                            次へ
                        </a>
                    )}
                </nav>
            </div>
        )
    }
</Layout>
