---
import { default as Layout } from "@/src/layouts/auth-layout.astro";
import {
    getActivity,
    updateActivity,
    deleteActivity,
} from "@/src/lib/query/activity";
import { style } from "@/src/styles/component";

const prePage = new URL(Astro.url).searchParams.get("page");

const redirectTo = prePage
    ? `/apps/record/list?page=${prePage}`
    : "/apps/record/list";

const user = await Astro.locals.currentUser();
if (!user) {
    return Astro.redirect("/sign-in");
}

const { id } = Astro.params;
if (!id) {
    return Astro.redirect(redirectTo);
}
let activityData = await getActivity({ id: id });
if (!activityData) {
    return Astro.redirect(redirectTo);
}

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const action = formData.get("action") as string;

    if (action === "delete") {
        await deleteActivity({
            userId: user.id,
            id: id,
        });
        return Astro.redirect(redirectTo);
    } else {
        const date = formData.get("date") as string;
        const period = formData.get("period") as unknown as number;

        await updateActivity({
            userId: user.id,
            activityId: id,
            activityData: {
                date,
                id: activityData.id,
                userId: activityData.userId,
                period,
                createAt: activityData.createAt,
                updatedAt: new Date().toISOString(),
            },
        });
        return Astro.redirect(redirectTo);
    }
}
---

<Layout title="編集">
    <h1 class={style.text.title()}>アクティビティ編集</h1>
    <form method="POST">
        <label for="date">日付</label>
        <input
            type="date"
            id="date"
            name="date"
            value={new Date(activityData.date).toISOString().split("T")[0]}
            required
        />
        <label for="period">稽古時間</label>
        <input
            type="number"
            id="period"
            name="period"
            value={activityData.period}
            step="0.5"
            required
        />
        <input type="hidden" name="action" value="update" />
        <button type="submit" class="submit-btn">更新</button>
    </form>

    <form
        method="POST"
        id="deleteForm"
        onsubmit="return confirm('このアクティビティを削除してもよろしいですか？');"
    >
        <input type="hidden" name="action" value="delete" />
        <button type="submit" class="delete-btn">削除する</button>
    </form>

    <a href={redirectTo} class="cancel-btn">キャンセル</a>
</Layout>
<style>
    form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        max-width: 400px;
    }
    .submit-btn {
        padding: 8px 16px;
        background-color: rgb(var(--sapphire));
        color: rgb(var(--crust));
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
    .submit-btn:hover {
        background-color: rgb(var(--green));
    }
    .delete-btn {
        padding: 8px 16px;
        background-color: rgb(var(--red));
        color: rgb(var(--crust));
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 1rem;
    }
    .delete-btn:hover {
        background-color: rgb(var(--maroon));
    }
    .cancel-btn {
        display: inline-block;
        margin-top: 1rem;
        color: rgb(var(--overlay1));
        text-decoration: none;
    }
    #deleteForm {
        margin-top: 1rem;
    }
</style>
