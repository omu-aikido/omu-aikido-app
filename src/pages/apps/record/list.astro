---
import { default as Layout } from "@/src/layouts/layout.astro"
import ActivityList from "@/src/components/ui/activity-list.astro"
import { style } from "@/src/styles/component"

const startParam = Astro.url.searchParams.get("start")
const endParam = Astro.url.searchParams.get("end")
const pageParam = Astro.url.searchParams.get("page")
const currentPage = pageParam ? parseInt(pageParam) : 1

// 追加: resetパラメータがあればクエリを削除してリダイレクト
if (Astro.url.searchParams.get("reset")) {
  return Astro.redirect(Astro.url.pathname)
}

const startValue = startParam ? new Date(startParam) : undefined
const endValue = endParam ? new Date(endParam) : undefined

// 現在のベースURLを取得
const currentUrl = Astro.url.toString()
const sortOrder = Astro.url.searchParams.get("sort") as "asc" | "desc"

// ソート順切り替え用のURLを生成
function generateSortUrl(newSortOrder: "asc" | "desc"): string {
  Astro.url.searchParams.set("sort", newSortOrder)
  Astro.url.searchParams.set("page", "1") // ソート順変更時は1ページ目に戻す
  return Astro.url.toString()
}
---

<Layout title="稽古記録 一覧">
  <h1 class={style.text.title()}>一覧</h1>

  <!-- フィルター用フィールド -->
  <form id="filter-form" class={style.form.container()} method="GET">
    <label for="start">開始日</label>
    <input
      type="date"
      id="start"
      name="start"
      class={style.form.input()}
      value={startValue ? startValue.toISOString().split("T")[0] : ""}
    />
    <label for="end">終了日</label>
    <input
      type="date"
      id="end"
      name="end"
      class={style.form.input()}
      value={endValue ? endValue.toISOString().split("T")[0] : ""}
    />
    {/*フィルター適用時にはpage=1に戻す */}
    <input type="hidden" name="page" value="1" class={style.form.button()} />
    {/* type="reset"からtype="submit"に変更しリセット用パラメータを送信 */}
    <button
      type="submit"
      name="reset"
      value="true"
      class={style.form.button({ type: "reset", span: "single" })}>リセット</button
    >
    <button type="submit" class={style.form.button({ span: "double" })}>フィルター</button>
  </form>

  <hr />

  <div class="mb-6">
    <span>並び順:</span>
    <a
      href={generateSortUrl("desc")}
      class={style.sort.button({ active: sortOrder !== "asc" })}
      data-sort="desc"
      data-astro-history="replace"
    >
      新しい順
    </a>
    <a
      href={generateSortUrl("asc")}
      class={style.sort.button({ active: sortOrder === "asc" })}
      data-sort="asc"
      data-astro-history="replace"
    >
      古い順
    </a>
  </div>

  <ActivityList
    startDate={startValue}
    endDate={endValue}
    page={currentPage}
    baseUrl={currentUrl}
    server:defer
  >
    <div slot="fallback">
      <table class={style.table.container()}>
        <thead class={style.table.thead.container()}>
          <tr class={style.table.thead.tr()}>
            <th class={style.table.thead.th()}>日付</th>
            <th class={style.table.thead.th()}>稽古時間</th>
            <th class={style.table.thead.th()}>操作</th>
          </tr>
        </thead>
        <tbody>
          {
            Array.from({ length: 8 }).map((_) => (
              <tr class={style.table.tbody.tr()}>
                <td class={style.table.tbody.td()}>
                  <span class="ph-text">&nbsp;</span>
                </td>
                <td class={style.table.tbody.td()}>
                  <span class="ph-text">&nbsp;</span>
                </td>
                <td class={style.table.tbody.td()}>
                  <span class="ph-text">&nbsp;</span>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </ActivityList>

  <hr />

  <a href="/apps/record" class={style.text.link()}>←稽古記録ホームに戻る</a>
</Layout>
