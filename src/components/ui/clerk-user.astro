---
interface Props {
    query: string;
}

const { query } = Astro.props;

import type { Account } from "@/src/type";
import { listUser, searchAccounts } from "@/src/lib/query/admin/clerk";
import { getRole } from "@/src/lib/query/profile";
import { Role } from "@/src/class";
import { style } from "@/src/styles/component";

import { translateYear, translateGrade } from "@/src/utils";

const user = await Astro.locals.currentUser();
if (!user) {
    return Astro.redirect("/sign-in");
}
const role = await getRole({ userId: user.id });
if (!role || !role.isManagement()) {
    return Astro.redirect("/dashboard");
}

const found = await searchAccounts({
    query: query,
});

const users = await listUser();
---

<div
    class="mt-4 overflow-hidden rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm"
>
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
            <thead class="bg-gray-50 dark:bg-gray-900">
                <tr>
                    <th
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider"
                    >
                        ユーザー
                    </th>
                    <th
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider"
                    >
                        役職
                    </th>
                    <th
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider"
                    >
                        学年
                    </th>
                    <th
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider"
                    >
                        段位
                    </th>
                    <th
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider"
                    >
                        操作
                    </th>
                </tr>
            </thead>
            <tbody
                class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700"
            >
                {
                    (found || users)
                        .sort(
                            // SORT by Role
                            (a: Account, b: Account) => {
                                return Role.compare(
                                    a.public_metadata.role,
                                    b.public_metadata.role
                                );
                            }
                        )
                        .map((user: Account) => (
                            <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                                <td class="px-6 py-3 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <img
                                            src={user.image_url}
                                            alt={`${user.last_name} ${user.first_name}`}
                                            class="w-10 h-10 rounded-full object-cover border-2 border-gray-200 dark:border-gray-600"
                                        />
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900 dark:text-gray-100">
                                                {user.last_name}{" "}
                                                {user.first_name}
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                                        {
                                            Role.fromString(
                                                user.public_metadata.role
                                            )?.ja
                                        }
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                                    {translateYear(user.public_metadata.year)}
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                                    {translateGrade(
                                        user.public_metadata
                                            .grade as unknown as number
                                    )}
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <a
                                        href={`/admin/account/${user.id}`}
                                        class="inline-flex items-center px-3 py-1 border border-transparent text-sm leading-4 font-medium rounded-md text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition-colors duration-200"
                                    >
                                        編集
                                    </a>
                                </td>
                            </tr>
                        ))
                }
            </tbody>
        </table>
    </div>
</div>
