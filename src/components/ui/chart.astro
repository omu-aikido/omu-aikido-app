---
interface Props {
    chart: string;
    title?: string;
    description?: string;
    tooltip?: string;
}

import { flavors } from "@catppuccin/palette";
const { chart, title, description, tooltip } = Astro.props;
---

<chart-container
    chartData=`${chart}`
    flavors=`${JSON.stringify(flavors)}`
    tooltip=`${tooltip}`
>
    {title && <h2 id={`chart-title`}>{title}</h2>}
    {description && <p id={`chart-desc`}>{description}</p>}
    <div class="chart-provider" id="chart-provider"></div>
</chart-container>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<script>
    class ChartContainer extends HTMLElement {
        constructor() {
            super();

            const flavors = JSON.parse(this.getAttribute("flavors")!);
            const show_tooltip =
                this.getAttribute("tooltip") === "true" ? true : false;
            const chart_proveider = this.querySelector(".chart-provider");

            const getThemePreference = () => {
                if (
                    typeof localStorage !== "undefined" &&
                    localStorage.getItem("theme")
                ) {
                    return localStorage.getItem("theme");
                }
                return window.matchMedia("(prefers-color-scheme: dark)").matches
                    ? "dark"
                    : "dark";
            };

            const isDark = getThemePreference() === "dark";
            const palette = isDark
                ? flavors.macchiato.colors
                : flavors.latte.colors;

            const chartData = (): string => {
                const chartData = this.getAttribute("chartData");
                if (!chartData) {
                    console.error("chartData is not defined");
                    return JSON.stringify({ "": "" });
                }
                return chartData;
            };

            const options = JSON.parse(chartData());
            const xCategories = options.xaxis.categories;
            const xTitlee = options.xaxis.title;

            options.colors = [
                palette.teal.hex,
                palette.maroon.hex,
                palette.lavender.hex,
                palette.peach.hex,
                palette.yellow.hex,
                palette.green.hex,
                palette.blue.hex,
                palette.sapphire.hex,
                palette.rosewater.hex,
                palette.flamingo.hex,
                palette.pink.hex,
                palette.mauve.hex,
                palette.red.hex,
            ];

            options.title = {
                text: undefined,
                align: "left",
                style: {
                    fontSize: "14px",
                    fontWeight: "bold",
                    color: palette.text.hex,
                },
            };

            options.chart = {
                ...options.chart,
                animations: {
                    enabled: true,
                    easing: "easeinout",
                    speed: 800,
                },
                toolbar: {
                    show: false,
                    tools: {
                        download: false,
                        selection: true,
                        zoom: true,
                        zoomin: true,
                        zoomout: true,
                        pan: true,
                        reset: true,
                    },
                    autoSelected: "zoom",
                },
                zoom: {
                    enabled: false,
                },
                background: "transparent",
            };

            options.subtitle = {
                style: {
                    color: palette.subtext0.hex,
                },
            };

            options.yaxis = {
                labels: {
                    style: {
                        colors: palette.overlay0.hex,
                    },
                },
                axisBorder: {
                    show: true,
                    color: palette.overlay0.hex,
                },
                axisTicks: {
                    show: true,
                    color: palette.overlay0.hex,
                },
            };

            options.xaxis = {
                labels: {
                    style: {
                        colors: palette.overlay0.hex,
                    },
                },
                axisBorder: {
                    show: true,
                    color: palette.overlay0.hex,
                },
                axisTicks: {
                    show: true,
                    color: palette.overlay0.hex,
                },
                categories: xCategories,
                title: {
                    text: xTitlee,
                },
            };

            options.plotOptions = {
                bar: {
                    horizontal: false,
                    columnWidth: "55%",
                    borderRadius: 5,
                    borderRadiusApplication: "end",
                    borderRadiusWhenStacked: "last",
                },
                pie: {
                    donut: {
                        size: "75%",
                    },
                },
                candlestick: {
                    colors: {
                        upward: palette.green.hex,
                        downward: palette.red.hex,
                    },
                },
            };

            options.stroke = {
                width: 2,
            };

            options.tooltip = {
                enabled: show_tooltip,
                style: {},
                x: {
                    show: true,
                    format: "dd MMM",
                },
                y: {
                    title: {
                        formatter: (seriesName: any) => seriesName,
                    },
                },
                theme: isDark ? "dark" : "light",
                marker: {
                    show: true,
                },
            };
            options.grid = {
                show: true,
                borderColor: palette.overlay0.hex,
                strokeDashArray: 0,
                position: "back",
            };

            options.legend = {
                show: true,
                position: "top",
                horizontalAlign: "right",
                floating: false,
                fontSize: "14px",
                fontFamily: "Inter, sans-serif",
                fontWeight: 400,
                inverseOrder: false,
                tooltipHoverFormatter: undefined,
                markers: {
                    width: 10,
                    height: 10,
                    strokeWidth: 0,
                    strokeColor: "#fff",
                    fillColors: undefined,
                    radius: 12,
                    customHTML: undefined,
                    onClick: undefined,
                    offsetX: 0,
                    offsetY: 0,
                },
                itemMargin: {
                    horizontal: 15,
                    vertical: 0,
                },
                onItemClick: {
                    toggleDataSeries: true,
                },
                onItemHover: {
                    highlightDataSeries: true,
                },
                labels: {
                    colors: palette.text.hex,
                },
            };
            options.toolbar = {
                tools: {
                    download: true,
                    selection: true,
                    zoom: true,
                    zoomin: true,
                    zoomout: true,
                    pan: true,
                    reset: true,
                },
                autoSelected: "zoom",
                style: {
                    background: palette.overlay0.hex,
                    color: palette.text.hex,
                },
            };

            document.addEventListener("DOMContentLoaded", () => {
                const chart = new ApexCharts(chart_proveider, options);
                chart.render().catch(console.error);
            });
        }
    }
    customElements.define("chart-container", ChartContainer);
</script>
